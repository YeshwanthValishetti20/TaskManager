{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yeshw\\\\Downloads\\\\Task-manger-app-master\\\\Task-manger-app-master\\\\frontend\\\\task-manager\\\\src\\\\context\\\\lists\\\\ListState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport listContext from './listContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ListState = props => {\n  _s();\n\n  const host = \"http://localhost\";\n  const [lists, setLists] = useState([]); //Fetching all lists\n\n  const getLists = async () => {\n    const response = await fetch(`${host}/lists/getlists`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        \"auth-token\": localStorage.getItem(\"token\")\n      }\n    });\n    const json = await response.json(); // console.log(json);\n\n    setLists(json);\n  }; //Adding a new list\n\n\n  const addList = async title => {\n    const response = await fetch(`${host}/lists/addlist`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        \"auth-token\": localStorage.getItem(\"token\")\n      },\n      body: JSON.stringify({\n        title\n      })\n    });\n    const list = await response.json();\n    console.log(list);\n    setLists(lists.concat(list));\n  };\n\n  const editList = async (id, title) => {\n    try {\n      const response = await fetch(`${host}/lists/updatelist/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          \"auth-token\": localStorage.getItem(\"token\")\n        },\n        body: JSON.stringify({\n          title\n        })\n      });\n      const json = await response.json();\n      console.log(json);\n      let newLists = JSON.parse(JSON.stringify(lists));\n\n      for (let i = 0; i < newLists.length; i++) {\n        const ele = newLists[i];\n\n        if (ele._id === id) {\n          newLists[i].title = title;\n          break;\n        }\n      }\n\n      setLists(newLists);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const deleteList = async list_id => {\n    try {\n      const response = await fetch(`${host}/lists/deletelist/${list_id}`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n          \"auth-token\": localStorage.getItem(\"token\")\n        }\n      });\n      const list = await response.json();\n      console.log(list);\n      const newLists = lists.filter(list => list._id !== list_id);\n      setLists(newLists);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(listContext.Provider, {\n    value: {\n      lists,\n      getLists,\n      addList,\n      editList,\n      deleteList\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ListState, \"eR6TDr/l0bbo3+H8rxu6wPpUEAE=\");\n\n_c = ListState;\nexport default ListState;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListState\");","map":{"version":3,"names":["React","useState","listContext","ListState","props","host","lists","setLists","getLists","response","fetch","method","headers","localStorage","getItem","json","addList","title","body","JSON","stringify","list","console","log","concat","editList","id","newLists","parse","i","length","ele","_id","error","deleteList","list_id","filter","children"],"sources":["C:/Users/yeshw/Downloads/Task-manger-app-master/Task-manger-app-master/frontend/task-manager/src/context/lists/ListState.js"],"sourcesContent":["import React, { useState } from 'react'\nimport listContext from './listContext'\n\nconst ListState = (props) => {\n    const host = \"http://localhost\";\n    const [lists, setLists] = useState([]);\n\n    //Fetching all lists\n\n    const getLists = async () => {\n\n        const response = await fetch(`${host}/lists/getlists`, {\n            method: 'GET',\n\n            headers: {\n                'Content-Type': 'application/json',\n                \"auth-token\": localStorage.getItem(\"token\")\n            },\n\n        });\n        const json = await response.json();\n        // console.log(json);\n        setLists(json);\n\n    }\n\n    //Adding a new list\n\n    const addList = async (title) => {\n\n        const response = await fetch(`${host}/lists/addlist`, {\n            method: 'POST',\n\n            headers: {\n                'Content-Type': 'application/json',\n                \"auth-token\": localStorage.getItem(\"token\")\n            },\n\n            body: JSON.stringify({ title }),\n\n        });\n        const list = await response.json();\n        console.log(list);\n        setLists(lists.concat(list));\n\n    }\n\n    const editList = async (id, title) => {\n\n        try {\n\n            const response = await fetch(`${host}/lists/updatelist/${id}`, {\n                method: 'PUT',\n\n                headers: {\n                    'Content-Type': 'application/json',\n                    \"auth-token\": localStorage.getItem(\"token\")\n                },\n\n                body: JSON.stringify({ title }),\n\n            });\n            const json = await response.json();\n            console.log(json);\n\n            let newLists = JSON.parse(JSON.stringify(lists))\n            for (let i = 0; i < newLists.length; i++) {\n                const ele = newLists[i];\n                if (ele._id === id) {  \n                    newLists[i].title = title;\n                    break;\n                }\n\n            }\n            setLists(newLists);\n\n        } catch (error) {\n            console.log(error);\n        }\n\n    }\n\n    const deleteList = async (list_id) => {\n\n        try {\n            \n            const response = await fetch(`${host}/lists/deletelist/${list_id}`, {\n                method: 'DELETE',\n    \n                headers: {\n                    'Content-Type': 'application/json',\n                    \"auth-token\": localStorage.getItem(\"token\")\n                },\n    \n    \n            });\n            const list = await response.json();\n            console.log(list);\n\n            const newLists=lists.filter(list=>list._id!==list_id);\n            setLists(newLists);\n\n        } catch (error) {\n            console.log(error);\n        }\n\n        \n    }\n\n    return (\n        <listContext.Provider value={{ lists, getLists, addList, editList,deleteList}}>\n            {props.children}\n        </listContext.Provider>\n    )\n}\n\nexport default ListState"],"mappings":"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"},"metadata":{},"sourceType":"module"}