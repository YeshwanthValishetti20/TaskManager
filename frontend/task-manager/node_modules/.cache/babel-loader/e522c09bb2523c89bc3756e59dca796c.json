{"ast":null,"code":"\"use strict\";\n\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all) __defProp(target, name, {\n    get: all[name],\n    enumerable: true\n  });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from)) if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n      get: () => from[key],\n      enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n    });\n  }\n  return to;\n};\nvar __toCommonJS = mod => __copyProps(__defProp({}, \"__esModule\", {\n  value: true\n}), mod);\nvar __async = (__this, __arguments, generator) => {\n  return new Promise((resolve, reject) => {\n    var fulfilled = value => {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var rejected = value => {\n      try {\n        step(generator.throw(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var step = x => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);\n    step((generator = generator.apply(__this, __arguments)).next());\n  });\n};\n\n// src/index.tsx\nvar src_exports = {};\n__export(src_exports, {\n  SessionContextProvider: () => SessionContextProvider,\n  useSession: () => useSession,\n  useSessionContext: () => useSessionContext,\n  useSupabaseClient: () => useSupabaseClient,\n  useUser: () => useUser\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/components/SessionContext.tsx\nvar import_react = require(\"react\");\nvar import_jsx_runtime = require(\"react/jsx-runtime\");\nvar SessionContext = (0, import_react.createContext)({\n  isLoading: true,\n  session: null,\n  error: null,\n  supabaseClient: {}\n});\nvar SessionContextProvider = ({\n  supabaseClient,\n  initialSession = null,\n  children\n}) => {\n  const [session, setSession] = (0, import_react.useState)(initialSession);\n  const [isLoading, setIsLoading] = (0, import_react.useState)(!initialSession);\n  const [error, setError] = (0, import_react.useState)();\n  (0, import_react.useEffect)(() => {\n    if (!session && initialSession) {\n      setSession(initialSession);\n    }\n  }, [session, initialSession]);\n  (0, import_react.useEffect)(() => {\n    let mounted = true;\n    function getSession() {\n      return __async(this, null, function* () {\n        const {\n          data: {\n            session: session2\n          },\n          error: error2\n        } = yield supabaseClient.auth.getSession();\n        if (mounted) {\n          if (error2) {\n            setError(error2);\n            setIsLoading(false);\n            return;\n          }\n          setSession(session2);\n          setIsLoading(false);\n        }\n      });\n    }\n    getSession();\n    return () => {\n      mounted = false;\n    };\n  }, []);\n  (0, import_react.useEffect)(() => {\n    const {\n      data: {\n        subscription\n      }\n    } = supabaseClient.auth.onAuthStateChange((event, session2) => {\n      if (session2 && (event === \"SIGNED_IN\" || event === \"TOKEN_REFRESHED\" || event === \"USER_UPDATED\")) {\n        setSession(session2);\n      }\n      if (event === \"SIGNED_OUT\") {\n        setSession(null);\n      }\n    });\n    return () => {\n      subscription.unsubscribe();\n    };\n  }, []);\n  const value = (0, import_react.useMemo)(() => {\n    if (isLoading) {\n      return {\n        isLoading: true,\n        session: null,\n        error: null,\n        supabaseClient\n      };\n    }\n    if (error) {\n      return {\n        isLoading: false,\n        session: null,\n        error,\n        supabaseClient\n      };\n    }\n    return {\n      isLoading: false,\n      session,\n      error: null,\n      supabaseClient\n    };\n  }, [isLoading, session, error]);\n  return /* @__PURE__ */(0, import_jsx_runtime.jsx)(SessionContext.Provider, {\n    value,\n    children\n  });\n};\nvar useSessionContext = () => {\n  const context = (0, import_react.useContext)(SessionContext);\n  if (context === void 0) {\n    throw new Error(`useSessionContext must be used within a SessionContextProvider.`);\n  }\n  return context;\n};\nfunction useSupabaseClient() {\n  const context = (0, import_react.useContext)(SessionContext);\n  if (context === void 0) {\n    throw new Error(`useSupabaseClient must be used within a SessionContextProvider.`);\n  }\n  return context.supabaseClient;\n}\nvar useSession = () => {\n  const context = (0, import_react.useContext)(SessionContext);\n  if (context === void 0) {\n    throw new Error(`useSession must be used within a SessionContextProvider.`);\n  }\n  return context.session;\n};\nvar useUser = () => {\n  var _a, _b;\n  const context = (0, import_react.useContext)(SessionContext);\n  if (context === void 0) {\n    throw new Error(`useUser must be used within a SessionContextProvider.`);\n  }\n  return (_b = (_a = context.session) == null ? void 0 : _a.user) != null ? _b : null;\n};\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  SessionContextProvider,\n  useSession,\n  useSessionContext,\n  useSupabaseClient,\n  useUser\n});","map":{"version":3,"names":["src_exports","__export","SessionContextProvider","useSession","useSessionContext","useSupabaseClient","useUser","module","exports","__toCommonJS","import_react","require","import_jsx_runtime","SessionContext","createContext","isLoading","session","error","supabaseClient","initialSession","children","setSession","useState","setIsLoading","setError","useEffect","mounted","getSession","__async","data","session2","error2","auth","subscription","onAuthStateChange","event","unsubscribe","value","useMemo","jsx","Provider","context","useContext","Error","_a","_b","user"],"sources":["C:\\Users\\yeshw\\Downloads\\Task-manger-app-master\\Task-manger-app-master\\frontend\\task-manager\\node_modules\\@supabase\\auth-helpers-react\\src\\index.tsx","C:\\Users\\yeshw\\Downloads\\Task-manger-app-master\\Task-manger-app-master\\frontend\\task-manager\\node_modules\\@supabase\\auth-helpers-react\\src\\components\\SessionContext.tsx"],"sourcesContent":["// Types\nexport type { Session, User, SupabaseClient } from '@supabase/supabase-js';\n\n// Methods & Components\nexport * from './components/SessionContext';\n","import { AuthError, Session, SupabaseClient } from '@supabase/supabase-js';\nimport React, {\n\tcreateContext,\n\tPropsWithChildren,\n\tuseContext,\n\tuseEffect,\n\tuseMemo,\n\tuseState\n} from 'react';\n\nexport type SessionContext =\n\t| {\n\t\t\tisLoading: true;\n\t\t\tsession: null;\n\t\t\terror: null;\n\t\t\tsupabaseClient: SupabaseClient;\n\t  }\n\t| {\n\t\t\tisLoading: false;\n\t\t\tsession: Session;\n\t\t\terror: null;\n\t\t\tsupabaseClient: SupabaseClient;\n\t  }\n\t| {\n\t\t\tisLoading: false;\n\t\t\tsession: null;\n\t\t\terror: AuthError;\n\t\t\tsupabaseClient: SupabaseClient;\n\t  }\n\t| {\n\t\t\tisLoading: false;\n\t\t\tsession: null;\n\t\t\terror: null;\n\t\t\tsupabaseClient: SupabaseClient;\n\t  };\n\nconst SessionContext = createContext<SessionContext>({\n\tisLoading: true,\n\tsession: null,\n\terror: null,\n\tsupabaseClient: {} as any\n});\n\nexport interface SessionContextProviderProps {\n\tsupabaseClient: SupabaseClient;\n\tinitialSession?: Session | null;\n}\n\nexport const SessionContextProvider = ({\n\tsupabaseClient,\n\tinitialSession = null,\n\tchildren\n}: PropsWithChildren<SessionContextProviderProps>) => {\n\tconst [session, setSession] = useState<Session | null>(initialSession);\n\tconst [isLoading, setIsLoading] = useState<boolean>(!initialSession);\n\tconst [error, setError] = useState<AuthError>();\n\n\tuseEffect(() => {\n\t\tif (!session && initialSession) {\n\t\t\tsetSession(initialSession);\n\t\t}\n\t}, [session, initialSession]);\n\n\tuseEffect(() => {\n\t\tlet mounted = true;\n\n\t\tasync function getSession() {\n\t\t\tconst {\n\t\t\t\tdata: { session },\n\t\t\t\terror\n\t\t\t} = await supabaseClient.auth.getSession();\n\n\t\t\t// only update the react state if the component is still mounted\n\t\t\tif (mounted) {\n\t\t\t\tif (error) {\n\t\t\t\t\tsetError(error);\n\t\t\t\t\tsetIsLoading(false);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tsetSession(session);\n\t\t\t\tsetIsLoading(false);\n\t\t\t}\n\t\t}\n\n\t\tgetSession();\n\n\t\treturn () => {\n\t\t\tmounted = false;\n\t\t};\n\t}, []);\n\n\tuseEffect(() => {\n\t\tconst {\n\t\t\tdata: { subscription }\n\t\t} = supabaseClient.auth.onAuthStateChange((event, session) => {\n\t\t\tif (session && (event === 'SIGNED_IN' || event === 'TOKEN_REFRESHED' || event === 'USER_UPDATED')) {\n\t\t\t\tsetSession(session);\n\t\t\t}\n\n\t\t\tif (event === 'SIGNED_OUT') {\n\t\t\t\tsetSession(null);\n\t\t\t}\n\t\t});\n\n\t\treturn () => {\n\t\t\tsubscription.unsubscribe();\n\t\t};\n\t}, []);\n\n\tconst value: SessionContext = useMemo(() => {\n\t\tif (isLoading) {\n\t\t\treturn {\n\t\t\t\tisLoading: true,\n\t\t\t\tsession: null,\n\t\t\t\terror: null,\n\t\t\t\tsupabaseClient\n\t\t\t};\n\t\t}\n\n\t\tif (error) {\n\t\t\treturn {\n\t\t\t\tisLoading: false,\n\t\t\t\tsession: null,\n\t\t\t\terror,\n\t\t\t\tsupabaseClient\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\tisLoading: false,\n\t\t\tsession,\n\t\t\terror: null,\n\t\t\tsupabaseClient\n\t\t};\n\t}, [isLoading, session, error]);\n\n\treturn <SessionContext.Provider value={value}>{children}</SessionContext.Provider>;\n};\n\nexport const useSessionContext = () => {\n\tconst context = useContext(SessionContext);\n\tif (context === undefined) {\n\t\tthrow new Error(`useSessionContext must be used within a SessionContextProvider.`);\n\t}\n\n\treturn context;\n};\n\nexport function useSupabaseClient<\n\tDatabase = any,\n\tSchemaName extends string & keyof Database = 'public' extends keyof Database\n\t\t? 'public'\n\t\t: string & keyof Database\n>() {\n\tconst context = useContext(SessionContext);\n\tif (context === undefined) {\n\t\tthrow new Error(`useSupabaseClient must be used within a SessionContextProvider.`);\n\t}\n\n\treturn context.supabaseClient as SupabaseClient<Database, SchemaName>;\n}\n\nexport const useSession = () => {\n\tconst context = useContext(SessionContext);\n\tif (context === undefined) {\n\t\tthrow new Error(`useSession must be used within a SessionContextProvider.`);\n\t}\n\n\treturn context.session;\n};\n\nexport const useUser = () => {\n\tconst context = useContext(SessionContext);\n\tif (context === undefined) {\n\t\tthrow new Error(`useUser must be used within a SessionContextProvider.`);\n\t}\n\n\treturn context.session?.user ?? null;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}