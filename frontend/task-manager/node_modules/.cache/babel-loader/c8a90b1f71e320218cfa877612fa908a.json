{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yeshw\\\\Downloads\\\\Task-manger-app-master\\\\Task-manger-app-master\\\\frontend\\\\task-manager\\\\src\\\\context\\\\lists\\\\ListState.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport listContext from './listContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ListState = props => {\n  _s();\n  const host = \"http://localhost:8000\";\n  const [lists, setLists] = useState([]);\n\n  //Fetching all lists\n\n  const getLists = async () => {\n    const response = await fetch(`${host}/lists/getlists`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        \"auth-token\": localStorage.getItem(\"token\")\n      }\n    });\n    const json = await response.json();\n    // console.log(json);\n    setLists(json);\n  };\n\n  //Adding a new list\n\n  const addList = async title => {\n    const response = await fetch(`${host}/lists/addlist`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        \"auth-token\": localStorage.getItem(\"token\")\n      },\n      body: JSON.stringify({\n        title\n      })\n    });\n    const list = await response.json();\n    console.log(list);\n    setLists(lists.concat(list));\n  };\n  const editList = async (id, title) => {\n    try {\n      const response = await fetch(`${host}/lists/updatelist/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          \"auth-token\": localStorage.getItem(\"token\")\n        },\n        body: JSON.stringify({\n          title\n        })\n      });\n      const json = await response.json();\n      console.log(json);\n      let newLists = JSON.parse(JSON.stringify(lists));\n      for (let i = 0; i < newLists.length; i++) {\n        const ele = newLists[i];\n        if (ele._id === id) {\n          newLists[i].title = title;\n          break;\n        }\n      }\n      setLists(newLists);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const deleteList = async list_id => {\n    try {\n      const response = await fetch(`${host}/lists/deletelist/${list_id}`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n          \"auth-token\": localStorage.getItem(\"token\")\n        }\n      });\n      const list = await response.json();\n      console.log(list);\n      const newLists = lists.filter(list => list._id !== list_id);\n      setLists(newLists);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(listContext.Provider, {\n    value: {\n      lists,\n      getLists,\n      addList,\n      editList,\n      deleteList\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 9\n  }, this);\n};\n_s(ListState, \"eR6TDr/l0bbo3+H8rxu6wPpUEAE=\");\n_c = ListState;\nexport default ListState;\nvar _c;\n$RefreshReg$(_c, \"ListState\");","map":{"version":3,"names":["React","useState","listContext","jsxDEV","_jsxDEV","ListState","props","_s","host","lists","setLists","getLists","response","fetch","method","headers","localStorage","getItem","json","addList","title","body","JSON","stringify","list","console","log","concat","editList","id","newLists","parse","i","length","ele","_id","error","deleteList","list_id","filter","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/yeshw/Downloads/Task-manger-app-master/Task-manger-app-master/frontend/task-manager/src/context/lists/ListState.js"],"sourcesContent":["import React, { useState } from 'react'\nimport listContext from './listContext'\n\nconst ListState = (props) => {\n    const host = \"http://localhost:8000\";\n    const [lists, setLists] = useState([]);\n\n    //Fetching all lists\n\n    const getLists = async () => {\n\n        const response = await fetch(`${host}/lists/getlists`, {\n            method: 'GET',\n\n            headers: {\n                'Content-Type': 'application/json',\n                \"auth-token\": localStorage.getItem(\"token\")\n            },\n\n        });\n        const json = await response.json();\n        // console.log(json);\n        setLists(json);\n\n    }\n\n    //Adding a new list\n\n    const addList = async (title) => {\n\n        const response = await fetch(`${host}/lists/addlist`, {\n            method: 'POST',\n\n            headers: {\n                'Content-Type': 'application/json',\n                \"auth-token\": localStorage.getItem(\"token\")\n            },\n\n            body: JSON.stringify({ title }),\n\n        });\n        const list = await response.json();\n        console.log(list);\n        setLists(lists.concat(list));\n\n    }\n\n    const editList = async (id, title) => {\n\n        try {\n\n            const response = await fetch(`${host}/lists/updatelist/${id}`, {\n                method: 'PUT',\n\n                headers: {\n                    'Content-Type': 'application/json',\n                    \"auth-token\": localStorage.getItem(\"token\")\n                },\n\n                body: JSON.stringify({ title }),\n\n            });\n            const json = await response.json();\n            console.log(json);\n\n            let newLists = JSON.parse(JSON.stringify(lists))\n            for (let i = 0; i < newLists.length; i++) {\n                const ele = newLists[i];\n                if (ele._id === id) {  \n                    newLists[i].title = title;\n                    break;\n                }\n\n            }\n            setLists(newLists);\n\n        } catch (error) {\n            console.log(error);\n        }\n\n    }\n\n    const deleteList = async (list_id) => {\n\n        try {\n            \n            const response = await fetch(`${host}/lists/deletelist/${list_id}`, {\n                method: 'DELETE',\n    \n                headers: {\n                    'Content-Type': 'application/json',\n                    \"auth-token\": localStorage.getItem(\"token\")\n                },\n    \n    \n            });\n            const list = await response.json();\n            console.log(list);\n\n            const newLists=lists.filter(list=>list._id!==list_id);\n            setLists(newLists);\n\n        } catch (error) {\n            console.log(error);\n        }\n\n        \n    }\n\n    return (\n        <listContext.Provider value={{ lists, getLists, addList, editList,deleteList}}>\n            {props.children}\n        </listContext.Provider>\n    )\n}\n\nexport default ListState"],"mappings":"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"},"metadata":{},"sourceType":"module"}