[{"C:\\Users\\yeshw\\Downloads\\Task-manger-app-master\\Task-manger-app-master\\frontend\\task-manager\\src\\index.js":"1","C:\\Users\\yeshw\\Downloads\\Task-manger-app-master\\Task-manger-app-master\\frontend\\task-manager\\src\\App.js":"2","C:\\Users\\yeshw\\Downloads\\Task-manger-app-master\\Task-manger-app-master\\frontend\\task-manager\\src\\components\\CreateList.js":"3","C:\\Users\\yeshw\\Downloads\\Task-manger-app-master\\Task-manger-app-master\\frontend\\task-manager\\src\\components\\Home.js":"4","C:\\Users\\yeshw\\Downloads\\Task-manger-app-master\\Task-manger-app-master\\frontend\\task-manager\\src\\components\\UpdateList.js":"5","C:\\Users\\yeshw\\Downloads\\Task-manger-app-master\\Task-manger-app-master\\frontend\\task-manager\\src\\components\\Tasks.js":"6","C:\\Users\\yeshw\\Downloads\\Task-manger-app-master\\Task-manger-app-master\\frontend\\task-manager\\src\\components\\UpdateTask.js":"7","C:\\Users\\yeshw\\Downloads\\Task-manger-app-master\\Task-manger-app-master\\frontend\\task-manager\\src\\components\\Login.js":"8","C:\\Users\\yeshw\\Downloads\\Task-manger-app-master\\Task-manger-app-master\\frontend\\task-manager\\src\\components\\Signup.js":"9","C:\\Users\\yeshw\\Downloads\\Task-manger-app-master\\Task-manger-app-master\\frontend\\task-manager\\src\\context\\tasks\\TaskState.js":"10","C:\\Users\\yeshw\\Downloads\\Task-manger-app-master\\Task-manger-app-master\\frontend\\task-manager\\src\\context\\lists\\ListState.js":"11","C:\\Users\\yeshw\\Downloads\\Task-manger-app-master\\Task-manger-app-master\\frontend\\task-manager\\src\\components\\Lists.js":"12","C:\\Users\\yeshw\\Downloads\\Task-manger-app-master\\Task-manger-app-master\\frontend\\task-manager\\src\\context\\lists\\listContext.js":"13","C:\\Users\\yeshw\\Downloads\\Task-manger-app-master\\Task-manger-app-master\\frontend\\task-manager\\src\\context\\tasks\\taskContext.js":"14","C:\\Users\\yeshw\\Downloads\\Task-manger-app-master\\Task-manger-app-master\\frontend\\task-manager\\src\\components\\Navbar.js":"15"},{"size":256,"mtime":1667533558000,"results":"16","hashOfConfig":"17"},{"size":1156,"mtime":1667533558000,"results":"18","hashOfConfig":"17"},{"size":1866,"mtime":1667533558000,"results":"19","hashOfConfig":"17"},{"size":308,"mtime":1667533558000,"results":"20","hashOfConfig":"17"},{"size":1898,"mtime":1667533558000,"results":"21","hashOfConfig":"17"},{"size":4777,"mtime":1667533558000,"results":"22","hashOfConfig":"17"},{"size":2358,"mtime":1667533558000,"results":"23","hashOfConfig":"17"},{"size":2386,"mtime":1694006793602,"results":"24","hashOfConfig":"17"},{"size":3400,"mtime":1694006665933,"results":"25","hashOfConfig":"17"},{"size":3840,"mtime":1667533558000,"results":"26","hashOfConfig":"17"},{"size":2843,"mtime":1667533558000,"results":"27","hashOfConfig":"17"},{"size":2264,"mtime":1667533558000,"results":"28","hashOfConfig":"17"},{"size":103,"mtime":1667533558000,"results":"29","hashOfConfig":"17"},{"size":103,"mtime":1667533558000,"results":"30","hashOfConfig":"17"},{"size":1562,"mtime":1667533558000,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"3r16af",{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"35"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"35"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"35"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"C:\\Users\\yeshw\\Downloads\\Task-manger-app-master\\Task-manger-app-master\\frontend\\task-manager\\src\\index.js",[],[],[],"C:\\Users\\yeshw\\Downloads\\Task-manger-app-master\\Task-manger-app-master\\frontend\\task-manager\\src\\App.js",[],[],"C:\\Users\\yeshw\\Downloads\\Task-manger-app-master\\Task-manger-app-master\\frontend\\task-manager\\src\\components\\CreateList.js",[],[],"C:\\Users\\yeshw\\Downloads\\Task-manger-app-master\\Task-manger-app-master\\frontend\\task-manager\\src\\components\\Home.js",[],[],"C:\\Users\\yeshw\\Downloads\\Task-manger-app-master\\Task-manger-app-master\\frontend\\task-manager\\src\\components\\UpdateList.js",[],[],"C:\\Users\\yeshw\\Downloads\\Task-manger-app-master\\Task-manger-app-master\\frontend\\task-manager\\src\\components\\Tasks.js",["81"],[],"import React, { useContext, useEffect, useState } from 'react'\nimport { useParams,Link } from 'react-router-dom'\nimport taskContext from '../context/tasks/taskContext';\nimport Navbar from './Navbar';\n\nconst Tasks = () => {\n  const context = useContext(taskContext);\n  const { tasks, getTasks, addTask, editTaskStatus,deleteTask } = context;\n\n  const [task, setTask] = useState({ description: \"\", dueDate: Date.now });\n\n  const { list_id } = useParams();\n\n  // let isCompleted=false;\n\n  const onChange = (e) => {\n    setTask({ ...task, [e.target.name]: e.target.value });\n  }\n\n  const handleClick = () => {\n\n    if (task.description.length >= 5) {\n      console.log(list_id);\n      console.log(task.dueDate);\n      console.log(Date.now)\n      addTask(list_id, task.description, task.dueDate);\n      setTask({description:\"\",dueDate:Date.now})\n\n    }\n    else {\n      console.log(\"Enter a valid description of the task\");\n    }\n  }\n\n  const checkOverdue=(dueDate)=>{\n    let currDate=new Date();\n    if(currDate.getTime()>dueDate.getTime()){\n      return true;\n    }\n    return false;\n  }\n\n  useEffect(() => {\n    getTasks(list_id);\n  }, []);\n\n  return (\n\n    <>\n\n    <Navbar/>\n\n    <div className='mt-5'>\n\n\n      <div className=' w-screen flex items-center justify-center mb-10 '>\n        <div className='border rounded-md border-lime-900 w-4/5 lg:w-3/5 flex flex-col items-center justify-center bg-emerald-800'>\n          <h2 className='font-bold text-2xl my-3 text-white'>Add a new task</h2>\n\n          <input placeholder='What to do?' className=\"border rounded-md py-3 px-3 w-4/5 outline-none\" name='description' onChange={onChange} value={task.description} />\n\n\n          <div className='flex w-4/5 items-center justify-center my-3'>\n            <label htmlFor=\"dueDate\" className='w-3/5 text-center text-white'>Set the due date</label>\n            <input type=\"date\" className=\"border rounded-md py-3 px-3 w-4/5 outline-none\" name='dueDate' onChange={onChange} value={task.dueDate} />\n          </div>\n\n          <div className='flex items-center justify-center my-3 w-4/5'>\n            <button className=\"text-white font-bold bg-emerald-400 px-3 py-2 mx-3 rounded-md cursor-pointer w-3/5\" onClick={handleClick}>Add</button>\n          </div>\n        </div>\n      </div>\n\n\n      <div className='flex flex-col items-center justify-center'>\n\n        <div className='flex  rounded-t  items-center justify-center px-3 py-3 w-11/12 mt-4 bg-emerald-400'>\n          <h2 className='font-bold text-2xl text-white'>YOUR TASKS</h2>\n        </div>\n\n\n        <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 border border-lime-900 rounded-b-md px-3 py-3 mb-4 w-11/12 bg-emerald-800'>\n          {tasks.map((task) => {\n            let isOverdue=false;\n            let d=new Date(task.dueDate);\n            isOverdue=checkOverdue(d);\n            // console.log(isOverdue);\n\n            // console.log(\"The die date of the task is:\",d);\n            return (\n              \n              <div className='border rounded-md flex items-center justify-center px-3 py-3 mx-3 my-3 bg-white' key={task._id}>\n                <div className='flex flex-col items-start justify-center'>\n                  <p className='font-semibold font-serif text-orange-600 text-center w-full'>{task.description}</p>\n\n                  <div className='flex items-center justify-start'>\n                    <label className='font-bold mx-2'>Due date:</label>\n                    <p className='my-2 font-mono italic'>{d.getDate()}-{d.getMonth()}-{d.getFullYear()}</p>\n                  </div>\n\n                  <div className='flex w-full justify-start my-1'>\n                    <label className='font-bold mx-2'>Status:</label>\n                    <p className={`${task.isCompleted ? \"text-green-700\" :isOverdue?\"text-red-700\":\"text-blue-700\"} font-bold`}>{task.isCompleted ? \"Completed\" : isOverdue?\"Overdue\":\"Ongoing\"}</p>\n                  </div>\n\n                  {!task.isCompleted && <div className='flex w-full justify-start my-1'>\n                    <input type=\"checkbox\" name=\"status\" value=\"status\" className='mx-2' onChange={()=>{editTaskStatus(task._id)}} />\n                    <label htmlFor=\"status\">Mark as completed</label>\n                  </div>}\n\n                  <div className='flex items-center my-2'>\n                    {!task.isCompleted && <Link to={`/${list_id}/updateTask/${task._id}`}><i className=\"fa-solid fa-pen-to-square m-3 fa-lg cursor-pointer\" ></i></Link>}\n                    <i className=\"fa-solid fa-trash mx-3 fa-lg cursor-pointer\" onClick={()=>{deleteTask(task._id)}}></i>\n                  </div>\n\n\n                </div>\n\n              </div>\n\n            )\n          })}\n\n        </div>\n\n      </div>\n\n    </div >\n\n    </>\n\n\n  )\n}\n\nexport default Tasks","C:\\Users\\yeshw\\Downloads\\Task-manger-app-master\\Task-manger-app-master\\frontend\\task-manager\\src\\components\\UpdateTask.js",[],[],"C:\\Users\\yeshw\\Downloads\\Task-manger-app-master\\Task-manger-app-master\\frontend\\task-manager\\src\\components\\Login.js",[],[],"C:\\Users\\yeshw\\Downloads\\Task-manger-app-master\\Task-manger-app-master\\frontend\\task-manager\\src\\components\\Signup.js",[],[],"C:\\Users\\yeshw\\Downloads\\Task-manger-app-master\\Task-manger-app-master\\frontend\\task-manager\\src\\context\\tasks\\TaskState.js",["82","83"],[],"import React, { useState } from 'react'\nimport taskContext from './taskContext'\n\nconst TaskState = (props) => {\n    const host = \"http://localhost\";\n    const [tasks, setTasks] = useState([]);\n\n    //Fetching all tasks\n\n    const getTasks = async (list_id) => {\n\n\n        const response = await fetch(`${host}/lists/${list_id}/gettasks`, {\n            method: 'GET',\n\n            headers: {\n                'Content-Type': 'application/json',\n            },\n\n        });\n        const json = await response.json();\n        // console.log(json);\n        setTasks(json);\n\n    }\n\n    // Adding a new task\n\n    const addTask = async (listId, description, dueDate) => {\n\n        const response = await fetch(`${host}/lists/${listId}/addtask`, {\n            method: 'POST',\n\n            headers: {\n                'Content-Type': 'application/json',\n            },\n\n            body: JSON.stringify({ description, dueDate }),\n\n        });\n        const task = await response.json();\n        // console.log(task);\n        setTasks(tasks.concat(task));\n\n    }\n\n\n    // Editing the status of the task\n\n    const editTaskStatus = async (taskId) => {\n        try {\n\n            const response = await fetch(`${host}/lists/updatetaskstatus/${taskId}`, {\n                method: 'PATCH',\n\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n\n                body: JSON.stringify({ isCompleted: true }),\n\n            });\n            const json = await response.json();\n\n\n            //Applying the changes in the frontend\n\n            const newTasks = JSON.parse(JSON.stringify(tasks));\n            for (let i = 0; i < newTasks.length; i++) {\n                let ele = newTasks[i];\n                if (ele._id === taskId) {\n                    newTasks[i].isCompleted = true;\n                    break;\n                }\n            }\n            setTasks(newTasks);\n\n        } catch (error) {\n            console.log(error);\n        }\n\n\n    }\n\n    //Editing the task\n\n    const editTask = async (list_id,task_id ,description,dueDate) => {\n\n        try {\n\n            const response = await fetch(`${host}/lists/${list_id}/updatetask/${task_id}`, {\n                method: 'PUT',\n\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n\n                body: JSON.stringify({ description,dueDate }),\n\n            });\n            const json = await response.json();\n            console.log(json);\n\n            let newTasks = JSON.parse(JSON.stringify(tasks))\n            for (let i = 0; i < newTasks.length; i++) {\n                const ele = newTasks[i];\n                if (ele._id === task_id) {  \n                    newTasks[i].description = description;\n                    newTasks[i].dueDate = dueDate;\n                    break;\n                }\n\n            }\n            setTasks(newTasks);\n\n        } catch (error) {\n            console.log(error);\n        }\n\n    }\n\n    //Deleting a task\n\n    const deleteTask = async (taskId) => {\n\n        try {\n\n            const response = await fetch(`${host}/lists/deletetask/${taskId}`, {\n                method: 'DELETE',\n\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            });\n            const json = await response.json();\n\n             //Applying the changes in the frontend\n\n            const newTasks = tasks.filter((task) => { return task._id !== taskId })  // using filter() function of javascript\n            setTasks(newTasks);\n\n        } catch (error) {\n            console.log(error);\n        }\n\n       \n\n\n\n    }\n\n    return (\n        <taskContext.Provider value={{ tasks, getTasks, addTask, editTaskStatus, deleteTask,editTask }}>\n            {props.children}\n        </taskContext.Provider>\n    )\n}\n\n\n\nexport default TaskState","C:\\Users\\yeshw\\Downloads\\Task-manger-app-master\\Task-manger-app-master\\frontend\\task-manager\\src\\context\\lists\\ListState.js",[],[],"C:\\Users\\yeshw\\Downloads\\Task-manger-app-master\\Task-manger-app-master\\frontend\\task-manager\\src\\components\\Lists.js",["84"],[],"import React, { useContext, useEffect } from 'react'\nimport listContext from '../context/lists/listContext'\nimport { Link } from 'react-router-dom';\nimport { useNavigate } from 'react-router-dom';\n\nconst Lists = () => {\n    const navigate=useNavigate();\n    const context = useContext(listContext);\n    const { lists, getLists,deleteList } = context;\n\n    useEffect(() => {\n\n        if(localStorage.getItem(\"token\")){\n            \n            getLists();\n        }\n        else{\n            navigate(\"/login\");\n        }\n\n\n    }, [])\n\n    return (\n        <div className='border rounded-md flex flex-col items-center justify-start w-9/12 h-4/5 my-8  '>\n\n            <div className='flex  border-lime-900 rounded-t-md items-center justify-between px-3 py-3 w-4/5 mt-4 bg-emerald-800'>\n                <h2 className='font-bold text-2xl text-white'>YOUR LISTS</h2>\n                <button className='text-white font-bold bg-emerald-400 px-3 py-2 mx-3'><Link to=\"/createList\">Create new List</Link></button>\n            </div>\n\n\n            <div className='flex flex-col   items-center justify-between px-3 py-3 w-4/5 mb-4 overflow-y-auto no-scrollbar border border-slate-300'>\n                {lists.map((list) => {\n                    return (\n\n                        <div className='border rounded-md flex w-full items-center justify-between px-3 py-3 mx-3 my-3 bg-emerald-800' key={list._id}>\n                            <div className='flex items-center'>\n                                <p className='text-white'>{list.title}</p>\n                                <i className=\"fa-solid fa-trash mx-3 text-emerald-400 cursor-pointer \" onClick={()=>{deleteList(list._id)}}></i>\n                                <Link to={`/updateList/${list._id}`} className='cursor-pointer'><i className=\"fa-solid fa-pen-to-square mx-3 text-emerald-400\"></i></Link>\n                            </div>\n                            <button className='text-white font-bold bg-emerald-400 px-3 py-2 mx-3'>\n                            <Link to={`/${list._id}/tasks`} className='cursor-pointer'>View Tasks</Link>\n                            </button>\n                        </div>\n                    )\n                })}\n\n            </div>\n        </div>\n    )\n}\n\nexport default Lists","C:\\Users\\yeshw\\Downloads\\Task-manger-app-master\\Task-manger-app-master\\frontend\\task-manager\\src\\context\\lists\\listContext.js",[],[],"C:\\Users\\yeshw\\Downloads\\Task-manger-app-master\\Task-manger-app-master\\frontend\\task-manager\\src\\context\\tasks\\taskContext.js",[],[],"C:\\Users\\yeshw\\Downloads\\Task-manger-app-master\\Task-manger-app-master\\frontend\\task-manager\\src\\components\\Navbar.js",[],[],{"ruleId":"85","severity":1,"message":"86","line":45,"column":6,"nodeType":"87","endLine":45,"endColumn":8,"suggestions":"88"},{"ruleId":"89","severity":1,"message":"90","line":63,"column":19,"nodeType":"91","messageId":"92","endLine":63,"endColumn":23},{"ruleId":"89","severity":1,"message":"90","line":135,"column":19,"nodeType":"91","messageId":"92","endLine":135,"endColumn":23},{"ruleId":"85","severity":1,"message":"93","line":22,"column":8,"nodeType":"87","endLine":22,"endColumn":10,"suggestions":"94"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getTasks' and 'list_id'. Either include them or remove the dependency array.","ArrayExpression",["95"],"no-unused-vars","'json' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'getLists' and 'navigate'. Either include them or remove the dependency array.",["96"],{"desc":"97","fix":"98"},{"desc":"99","fix":"100"},"Update the dependencies array to be: [getTasks, list_id]",{"range":"101","text":"102"},"Update the dependencies array to be: [getLists, navigate]",{"range":"103","text":"104"},[1135,1137],"[getTasks, list_id]",[530,532],"[getLists, navigate]"]